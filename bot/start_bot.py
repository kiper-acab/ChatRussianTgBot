__all__ = ()

import asyncio
import logging
import os

import aiogram
import aiogram.filters
import aiogram.fsm.storage.memory
import aiogram.types
import dotenv


dotenv.load_dotenv()


logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
)

logger = logging.getLogger(__name__)

admins = [int(admin_id) for admin_id in os.getenv("ADMINS").split(",")]

bot = aiogram.Bot(token=os.getenv("BOT_TOKEN"))
dp = aiogram.Dispatcher(storage=aiogram.fsm.storage.memory.MemoryStorage())


@dp.message(aiogram.filters.CommandStart())
async def command_start(message: aiogram.types.Message):
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! –Ø –†—É—Å—è ‚Äî —Ç–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫ –≤ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ –∫ —Ä—É—Å—Å–∫–æ–º—É —è–∑—ã–∫—É! üìö‚úçÔ∏è \n"
        "–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ —É–ª—É—á—à–∏—Ç—å –æ—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏—é, –ø—É–Ω–∫—Ç—É–∞—Ü–∏—é, —Ä–∞–∑–±–µ—Ä—É \n"
        "—Å–ª–æ–∂–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞ –∏ –¥–∞–∂–µ —É—Å—Ç—Ä–æ—é –Ω–µ–±–æ–ª—å—à–∏–µ —Ç–µ—Å—Ç—ã. –í–æ—Ç —á—Ç–æ —è —É–º–µ—é: \n"
        "  ‚úÖ –ü—Ä–æ–≤–µ—Ä—è—Ç—å –∑–Ω–∞–Ω–∏—è –æ—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏–∏\n"
        "  ‚úÖ –ü—Ä–æ–≤–µ—Ä—è—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è —Å–ª–æ–≤–∞—Ä–Ω—ã—Ö —Å–ª–æ–≤\n"
        "  ‚úÖ –î–∞–≤–∞—Ç—å –ø–æ–ª–µ–∑–Ω—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è\n",
    )


async def main():
    await dp.start_polling(bot)


if __name__ == "__main__":
    try:
        asyncio.run(main())

    except KeyboardInterrupt:
        logger.info("Exit")
